{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\Coding Projects\\\\Doctor\\\\src\\\\components\\\\contactPicker\\\\ContactPicker.js\";\nimport React from \"react\";\n\n/*<ContactPicker contacts={contacts} id='contact' name='contact' value={contact} onChange={(e) => setContact(e.target.value)} />*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactPicker = _ref => {\n  let {\n    contacts,\n    setContact,\n    value,\n    name\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: name,\n      value: value,\n      onChange: e => setContact(e.target.value),\n      children: /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"No Contact Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ContactPicker;\n{\n  contacts.map((item, index) => {\n    const {\n      name,\n      ...description\n    } = item; //This refactors the object being mapped over. The item placeholder is refactored now to be an object with a key called name containing name and then another key called description that contains the rest of the object key value pairs\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      name: name,\n      description: description\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this);\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"ContactPicker\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactPicker","_ref","contacts","setContact","value","name","children","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","map","item","index","description","Tile","$RefreshReg$"],"sources":["C:/Users/Matt/Documents/Coding Projects/Doctor/src/components/contactPicker/ContactPicker.js"],"sourcesContent":["import React from \"react\";\r\n\r\n/*<ContactPicker contacts={contacts} id='contact' name='contact' value={contact} onChange={(e) => setContact(e.target.value)} />*/\r\n\r\nexport const ContactPicker = ({contacts, setContact, value, name}) => {\r\n  return (\r\n    <>\r\n      <select name={name} value={value} onChange={(e) => setContact(e.target.value)}>\r\n        <option value=\"\">No Contact Selected</option>\r\n\r\n      </select>\r\n    </>\r\n  );\r\n};\r\n\r\n{contacts.map((item, index) => {\r\n  const { name, ...description } = item; //This refactors the object being mapped over. The item placeholder is refactored now to be an object with a key called name containing name and then another key called description that contains the rest of the object key value pairs\r\n  return (\r\n    <Tile\r\n    name={name}\r\n    description={description}\r\n    key={index}\r\n    />\r\n  );\r\n})}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,OAAO,MAAMC,aAAa,GAAGC,IAAA,IAAyC;EAAA,IAAxC;IAACC,QAAQ;IAAEC,UAAU;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAAJ,IAAA;EAC/D,oBACEJ,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MAAQQ,IAAI,EAAEA,IAAK;MAACD,KAAK,EAAEA,KAAM;MAACG,QAAQ,EAAGC,CAAC,IAAKL,UAAU,CAACK,CAAC,CAACC,MAAM,CAACL,KAAK,CAAE;MAAAE,QAAA,eAC5ET,OAAA;QAAQO,KAAK,EAAC,EAAE;QAAAE,QAAA,EAAC;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEtC,iBACR;AAEP,CAAC;AAACC,EAAA,GATWd,aAAa;AAW1B;EAACE,QAAQ,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC7B,MAAM;MAAEZ,IAAI;MAAE,GAAGa;IAAY,CAAC,GAAGF,IAAI,CAAC,CAAC;IACvC,oBACEnB,OAAA,CAACsB,IAAI;MACLd,IAAI,EAAEA,IAAK;MACXa,WAAW,EAAEA;IAAY,GACpBD,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR;EAEN,CAAC,CAAC;AAAA;AAAC,IAAAC,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}