{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\Coding Projects\\\\Doctor\\\\src\\\\components\\\\contactPicker\\\\ContactPicker.js\";\nimport React from \"react\";\n\n/*<ContactPicker contacts={contacts} id='contact' name='contact' value={contact} onChange={(e) => setContact(e.target.value)} />*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactPicker = props => {\n  const {\n    contacts,\n    setContact,\n    value,\n    name\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: name,\n      value: value,\n      onChange: e => setContact(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"No Contact Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), contacts.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.name,\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ContactPicker;\nvar _c;\n$RefreshReg$(_c, \"ContactPicker\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactPicker","props","contacts","setContact","value","name","children","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","$RefreshReg$"],"sources":["C:/Users/Matt/Documents/Coding Projects/Doctor/src/components/contactPicker/ContactPicker.js"],"sourcesContent":["import React from \"react\";\r\n\r\n/*<ContactPicker contacts={contacts} id='contact' name='contact' value={contact} onChange={(e) => setContact(e.target.value)} />*/\r\n\r\nexport const ContactPicker = (props) => {\r\n  const {contacts, setContact, value, name} = props;\r\n\r\n  return (\r\n    <>\r\n      <select name={name} value={value} onChange={(e) => setContact(e.target.value)}>\r\n        <option value=\"\">No Contact Selected</option>\r\n        {contacts.map((item) => (\r\n          <option value={item.name}>{item.name}</option>\r\n          )\r\n        )\r\n        };\r\n      </select>\r\n    </>\r\n  );\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK;EACtC,MAAM;IAACC,QAAQ;IAAEC,UAAU;IAAEC,KAAK;IAAEC;EAAI,CAAC,GAAGJ,KAAK;EAEjD,oBACEJ,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA;MAAQQ,IAAI,EAAEA,IAAK;MAACD,KAAK,EAAEA,KAAM;MAACG,QAAQ,EAAGC,CAAC,IAAKL,UAAU,CAACK,CAAC,CAACC,MAAM,CAACL,KAAK,CAAE;MAAAE,QAAA,gBAC5ET,OAAA;QAAQO,KAAK,EAAC,EAAE;QAAAE,QAAA,EAAC;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EAC5CX,QAAQ,CAACY,GAAG,CAAEC,IAAI,iBACjBlB,OAAA;QAAQO,KAAK,EAAEW,IAAI,CAACV,IAAK;QAAAC,QAAA,EAAES,IAAI,CAACV;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnC,CACF,EACA,GACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAS,iBACR;AAEP,CAAC;AAACG,EAAA,GAfWhB,aAAa;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}